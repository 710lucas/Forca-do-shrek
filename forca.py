# -*- coding: utf-8 -*-
"""forca

criado por: luxs710

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1suR3ujNiiayZSFQcIGjkqaCJEoDqPwhe

O jogo tem dois modos, dependendo dos jogadores:
a) Modo 1: jogam um usuário e o computador
b) Modo 2: jogam dois usuários
- No modo 1, o computador deve escolher aleatoriamente uma palavra dentre as opções de uma lista com 8
palavras. O jogo deve informar a quantidade de letras da palavra (Para palavras com 4 letras, exemplo: _ _
_ _ ). O usuário informa uma letra e caso exista na palavra, o programa informa a posição da letra (Exemplo:
Se a palavra for P A T O e o usuário informar A, o programa deve imprimir _ A _ _). Após dizer a letra, o
usuário pode chutar a palavra caso deseje. Caso contrário, segue para informar a próxima letra. Caso não
exista a letra na palavra ou a palavra chutada esteja errada, o usuário perde 1 ponto. O usuário pode perder
até 5 pontos. Depois disso, é forca e o usuário perdeu a partida e o computador ganhou.
- No modo 2: um jogador1 escolhe a palavra e jogador2 adivinha. O jogo deve informar a quantidade de
letras da palavra escolhida pelo jogador1 (Para palavras com 4 letras, exemplo: _ _ _ _ ). O jogador2 informa

uma letra e caso exista na palavra, o programa informa a posição da letra (Exemplo: Se a palavra for P A T
O e o jogador2 informar A, o programa deve imprimir _ A _ _). Após dizer a letra, o jogador2 pode chutar
a palavra, caso deseje. Caso contrário, segue para informar a próxima letra. Caso não exista a letra na palavra
ou a palavra chutada esteja errada, o jogador2 perde 1 ponto. O jogador2 pode perder até 5 pontos. Depois
disso, é forca e o jogador2 perdeu a partida e o jogador1 ganhou.
Requisitos mínimos:
- O código precisa ter uma função que teste se a letra pertence a palavra (ou se a palavra chutada é a palavra).
Pode ser uma ou duas funções.
- O código deve perguntar se o jogador/usuário deseja jogar novamente.
- O programa deve guardar o nome dos jogadores para informar no final o ganhador (caso tenha).
- O código precisa fazer tratamento de erros para todos os casos.
"""



import random
from IPython.display import clear_output 

def verificaPalavra(palavra_digitada, palavra):
  for i in range (len(palavra_digitada)):
    if palavra_digitada[i] != palavra[i]:
      return False
  return True

def verificaLetra(letra, palavra):
  if letra in palavra:
    return True
  else:
    return False



continuar = True

while(continuar):
  print("""


███████╗ ██████╗ ██████╗  ██████╗ █████╗ 
██╔════╝██╔═══██╗██╔══██╗██╔════╝██╔══██╗
█████╗  ██║   ██║██████╔╝██║     ███████║
██╔══╝  ██║   ██║██╔══██╗██║     ██╔══██║
██║     ╚██████╔╝██║  ██║╚██████╗██║  ██║
╚═╝      ╚═════╝ ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝
                                         

Modo 1: forca relacionada a países aleatorios
Modo 2: Modo de 2 jogadores, o primeiro escolhe a palavra e o segundo tenta advinihar 

  """)

  modo = int(input("Qual modo deseja jogar 1 ou 2: "))
  while(modo != 1 and modo != 2):
    modo = int(input("Qual modo deseja jogar 1 ou 2: "))
  ganhou = False
  perdeu = False
  vidas = 5

  if(modo == 1):
    palavras = ["albania", "azerbaijão", "kiribati", "brasil", "dinamarca", "marrocos", "holanda", "brunei"]
    #escolher uma palavra
    

    random.shuffle(palavras)
    palavra = palavras[0]
    
 

    quantidade_letras = len(palavra)
    lista_tracinhos = []

    for i in range(quantidade_letras):
      lista_tracinhos.append("_")    
      
  elif (modo == 2):
    palavra = input("Digite uma palavra para o usuario adivinhar: ").lower()
    clear_output()
    quantidade_letras = len(palavra)
    lista_tracinhos = []

    for i in range(quantidade_letras):
      lista_tracinhos.append("_")    

    
  while(ganhou == False and perdeu == False):
    clear_output()

    for i in range(quantidade_letras):
      print(lista_tracinhos[i], end=" ")


    print("\na palavra tem:", len(palavra), "letras")
    print("Você tem ", vidas, "vidas restantes")
    
  
    
    
    chute = input("deseja chutar a palavra? [sim/nao]: ").lower()
    while (chute not in ["sim", "nao", "não"]):
      chute = input("deseja chutar a palavra? [sim/nao]: ").lower()
    
    if(chute == "sim"):
      palavra_digitada = input("chute a palavra: ").lower()
      if(verificaPalavra(palavra_digitada, palavra)):
        ganhou = True
      else:
        vidas -= 1

    else:
      letra = input("Digite uma letra: ").lower()
      while (len(letra)>1):
        letra = input("Digite uma letra: ").lower()

      if(verificaLetra(letra, palavra)):
        for i in range(quantidade_letras):
          if(letra == palavra[i]):
            lista_tracinhos[i] = letra
      else:
        vidas -= 1
      
      if(verificaPalavra(lista_tracinhos, palavra)):
        ganhou = True
      
    if(vidas == 0):
      print("""
        +-----+
          |   |
          O   |
         /|\  |
         / \  |
              |
        =======
      """)
      print("A palavra era: ", palavra)
      perdeu = True
      deseja_continuar = input("Deseja continuar [sim/nao]: ").lower()
      if(deseja_continuar == "sim"):
        continuar = True
      else:
        continuar = False
        
      

    elif(ganhou == True):
      print("Parabens, você ganhou o jogo")
      print("""
⢀⡴⠑⡄⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣤⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
⠸⡇⠀⠿⡀⠀⠀⠀⣀⡴⢿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⠀⠑⢄⣠⠾⠁⣀⣄⡈⠙⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⠀⢀⡀⠁⠀⠀⠈⠙⠛⠂⠈⣿⣿⣿⣿⣿⠿⡿⢿⣆⠀⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⢀⡾⣁⣀⠀⠴⠂⠙⣗⡀⠀⢻⣿⣿⠭⢤⣴⣦⣤⣹⠀⠀⠀⢀⢴⣶⣆ 
⠀⠀⢀⣾⣿⣿⣿⣷⣮⣽⣾⣿⣥⣴⣿⣿⡿⢂⠔⢚⡿⢿⣿⣦⣴⣾⠁⠸⣼⡿ 
⠀⢀⡞⠁⠙⠻⠿⠟⠉⠀⠛⢹⣿⣿⣿⣿⣿⣌⢤⣼⣿⣾⣿⡟⠉⠀⠀⠀⠀⠀ 
⠀⣾⣷⣶⠇⠀⠀⣤⣄⣀⡀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀ 
⠀⠉⠈⠉⠀⠀⢦⡈⢻⣿⣿⣿⣶⣶⣶⣶⣤⣽⡹⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⠀⠀⠀⠀⠉⠲⣽⡻⢿⣿⣿⣿⣿⣿⣿⣷⣜⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣷⣶⣮⣭⣽⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⠀⠀⠀⣀⣀⣈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀ 
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⠿⠿⠿⠿⠛⠉
      """)
      deseja_continuar = input("Deseja continuar [sim/nao]: ").lower()
      if(deseja_continuar == "sim"):
        continuar = True
      else:
        continuar = False
